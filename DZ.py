def split_text_by_separators(text: str, seps: list[str]) -> list[str]:
    """
    Функция разбивает входную строку на подстроки, разделяясь указанными разделителями.

    Args:
    text (str): Входная строка для разбиения.
    seps (list[str]): Список разделителей для использования.

    Returns:
    list[str]: Список подстрок, разделенных указанными разделителями.
    """
    result: list[str] = ['']  # Инициализируем результат с пустой строкой
    waiting_for_separator: bool = True  # Флаг для ожидания разделителя

    for symbol in text:
        if waiting_for_separator:
            # Если мы ждем разделителя и встречаем его, переходим к следующему разделу
            if symbol in seps:
                waiting_for_separator = False
        else:
            # Если не ждем разделителя, добавляем символ к текущей подстроке
            if not symbol in seps and symbol != ' ':  # Проверяем, что символ не разделитель или пробел
                result.append('')  # Добавляем новую пустую строку в результат
                waiting_for_separator = True  # Переходим к ожиданию нового разделителя
        result[-1] += symbol  # Добавляем символ к последней подстроке в результате

    return result  # Возвращаем список разбитых подстрок


if __name__ == "__main__":
    separators: list[str] = [';', '.', '!', '?']  # Определяем список разделителей
    test_string = "Что?.. Да! Вышел корень из тумана; Вынул ножик из кармана. Раз, два, всё?.."  # Тестовая строка

    # Здесь можно добавить код для проверки работы функции
    # Например, вывести результат на экран или сохранить в файл